// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'env.dart';

// **************************************************************************
// FlutterSecureDotEnvAnnotationGenerator
// **************************************************************************

class _$Env extends Env {
  const _$Env(this._encryptionKey, this._iv) : super._();

  final String _encryptionKey;
  final String _iv;
  static final Uint8List _encryptedValues = Uint8List.fromList([
    40,
    184,
    203,
    170,
    100,
    255,
    140,
    166,
    35,
    48,
    13,
    74,
    1,
    236,
    121,
    12,
    222,
    42,
    123,
    47,
    242,
    191,
    135,
    207,
    98,
    158,
    107,
    159,
    219,
    65,
    174,
    136,
    144,
    51,
    8,
    110,
    114,
    141,
    60,
    152,
    212,
    169,
    34,
    63,
    244,
    148,
    76,
    249,
    26,
    24,
    133,
    85,
    97,
    195,
    63,
    62,
    43,
    252,
    79,
    142,
    12,
    27,
    185,
    183,
    207,
    68,
    6,
    75,
    26,
    106,
    131,
    89,
    169,
    173,
    142,
    244,
    246,
    41,
    191,
    228,
    36,
    82,
    153,
    90,
    90,
    200,
    215,
    42,
    65,
    39,
    70,
    175,
    51,
    124,
    214,
    92,
    40,
    56,
    14,
    126,
    41,
    168,
    31,
    16,
    245,
    26,
    178,
    243,
    182,
    150,
    210,
    247,
    46,
    107,
    161,
    197,
    92,
    211,
    224,
    175,
    208,
    118,
    14,
    127,
    206,
    64,
    115,
    241,
    92,
    115,
    60,
    104,
    68,
    20,
    30,
    177,
    68,
    134,
    236,
    1,
    199,
    171,
    69,
    135,
    253,
    182,
    98,
    158,
    140,
    62,
    7,
    129,
    101,
    157,
    210,
    83,
    6,
    67,
    67,
    179,
    44,
    126,
    94,
    32,
    238,
    55,
    121,
    89,
    217,
    99,
    134,
    228,
    184,
    25,
    34,
    173,
    38,
    122,
    248,
    42,
    109,
    147,
    73,
    113,
    241,
    181,
    182,
    142,
    217,
    171,
    63,
    4,
    117,
    191,
    198,
    131,
    53,
    142,
    129,
    83,
    250,
    25,
    174,
    133,
    237,
    220,
    44,
    118,
    165,
    72,
    97,
    56,
    92,
    19,
    247,
    203,
    231,
    29,
    44,
    234,
    29,
    158,
    0,
    135,
    143,
    193,
    214,
    37,
    38,
    99,
    197,
    101,
    22,
    243,
    202,
    124,
    42,
    223,
    84,
    56,
    203,
    30,
    208,
    31,
    102,
    167,
    9,
    224,
    7,
    22,
    63,
    151,
    154,
    201,
    43,
    65,
    124,
    186,
    64,
    162,
    11,
    123,
    111,
    71,
    160,
    81,
    148,
    152,
    52,
    52,
    231,
    243,
    125,
    193,
    204,
    20,
    37,
    238,
    44,
    186,
    200,
    3,
    47,
    205,
    103,
    88,
    64,
    16,
    9,
    207,
    123,
    166,
    253,
    208,
    188,
    155,
    174,
    242,
    66,
    197,
    65,
    171,
    83,
    203,
    3,
    91,
    55,
    196,
    132,
    222,
    110,
    4,
    110,
    117,
    60,
    247,
    251,
    55,
    215,
    13,
    213,
    173,
    1,
    182,
    190,
    163,
    86,
    5,
    192,
    92,
    176,
    71,
    74,
    52,
    145,
    82,
    79,
    76,
    172,
    72,
    14,
    167,
    25,
    250,
    50,
    94,
    68,
    244,
    62,
    54,
    194,
    203,
    26,
    167,
    139,
    225,
    59,
    45,
    237,
    3,
    32,
    251,
    178,
    125,
    38,
    96,
    6,
    32,
    136,
    63,
    16,
    128,
    41,
    35,
    93,
    109,
    82,
    236,
    4,
    102,
    194,
    218,
    26,
    7,
    216,
    41,
    165,
    124,
    133,
    62,
    134,
    8,
    225,
    52,
    86,
    209,
    164,
    53,
    12,
    153,
    165,
    108,
    125,
    203,
    193,
    236,
    74,
    31,
    246,
    215,
    149,
    56,
    159,
    228,
    198,
    136
  ]);
  @override
  String get firebaseAndroidApiKey => _get('FIREBASE_ANDROID_API_KEY');

  @override
  String get firebaseAndroidAppId => _get('FIREBASE_ANDROID_APP_ID');

  @override
  String get firebaseAndroidMessagingSenderId =>
      _get('FIREBASE_ANDROID_MESSAGING_SENDER_ID');

  @override
  String get firebaseAndroidProjectId => _get('FIREBASE_ANDROID_PROJECT_ID');

  @override
  String get firebaseAndroidStorageBucket =>
      _get('FIREBASE_ANDROID_STORAGE_BUCKET');

  T _get<T>(
    String key, {
    T Function(String)? fromString,
  }) {
    T parseValue(String strValue) {
      if (T == String) {
        return (strValue) as T;
      } else if (T == int) {
        return int.parse(strValue) as T;
      } else if (T == double) {
        return double.parse(strValue) as T;
      } else if (T == bool) {
        return (strValue.toLowerCase() == 'true') as T;
      } else if (T == Enum || fromString != null) {
        if (fromString == null) {
          throw Exception('fromString is required for Enum');
        }

        return fromString(strValue.split('.').last);
      }

      throw Exception('Type ${T.toString()} not supported');
    }

    final encryptionKey = base64.decode(_encryptionKey.trim());
    final iv = base64.decode(_iv.trim());
    final decrypted =
        AESCBCEncrypter.aesCbcDecrypt(encryptionKey, iv, _encryptedValues);
    final jsonMap = json.decode(decrypted) as Map<String, dynamic>;
    if (!jsonMap.containsKey(key)) {
      throw Exception('Key $key not found in .env file');
    }

    final encryptedValue = jsonMap[key] as String;
    final decryptedValue = AESCBCEncrypter.aesCbcDecrypt(
      encryptionKey,
      iv,
      base64.decode(encryptedValue),
    );
    return parseValue(decryptedValue);
  }
}
